[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\LUISAQ~1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\LUISAQ~1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.5 (Oracle Corporation Java 11.0.19)
[debug]       Load.loadUnit: plugins took 136.6319ms
[debug]       Load.loadUnit: defsScala took 0.5925ms
[debug] [Loading] Scanning directory C:\Users\Luis Aquino\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Luis Aquino\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 34.4237 ms
[debug]           Load.resolveProject(global-plugins) took 83.1337ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Luis Aquino\.sbt\1.0\plugins, plugins: List(<none>))) took 168.378ms
[debug] [Loading] Done in C:\Users\Luis Aquino\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 208.7532ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4171ms
[debug]     Load.loadUnit(file:/C:/Users/Luis%20Aquino/.sbt/1.0/plugins/, ...) took 362.3828ms
[debug]   Load.apply: load took 724.5117ms
[debug]   Load.apply: resolveProjects took 14.9317ms
[debug]   Load.apply: finalTransforms took 116.4412ms
[debug]   Load.apply: config.delegates took 11.9334ms
[debug]   Load.apply: Def.make(settings)... took 3917.5908ms
[debug]   Load.apply: structureIndex took 141.8216ms
[debug]   Load.apply: mkStreams took 2.7018ms
[info] loading global plugins from C:\Users\Luis Aquino\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 7298.4443ms
[debug]           Load.loadUnit: plugins took 91.239ms
[debug]           Load.loadUnit: defsScala took 0.0079ms
[debug] [Loading] Scanning directory C:\bigdata\Workspace\usecases\olympics\olympics\project
[debug]             Load.loadUnit: mkEval took 11.3906ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\bigdata\Workspace\usecases\olympics\olympics\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.853 ms
[info] loading settings for project olympics-build from idea.sbt ...
[debug]               Load.resolveProject(olympics-build) took 31.2064ms
[debug]             Load.loadTransitive: finalizeProject(Project(id olympics-build, base: C:\bigdata\Workspace\usecases\olympics\olympics\project, plugins: List(<none>))) took 45.6514ms
[debug] [Loading] Done in C:\bigdata\Workspace\usecases\olympics\olympics\project, returning: (olympics-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 343.4277ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.0281ms
[debug]         Load.loadUnit(file:/C:/bigdata/Workspace/usecases/olympics/olympics/project/, ...) took 445.5146ms
[debug]       Load.apply: load took 448.683ms
[debug]       Load.apply: resolveProjects took 0.2156ms
[debug]       Load.apply: finalTransforms took 70.9909ms
[debug]       Load.apply: config.delegates took 0.6483ms
[debug]       Load.apply: Def.make(settings)... took 189.6603ms
[debug]       Load.apply: structureIndex took 76.1121ms
[debug]       Load.apply: mkStreams took 0.0037ms
[info] loading project definition from C:\bigdata\Workspace\usecases\olympics\olympics\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 2642.1335ms
[debug]     Load.loadUnit: defsScala took 0.0062ms
[debug] [Loading] Scanning directory C:\bigdata\Workspace\usecases\olympics\olympics
[debug]       Load.loadUnit: mkEval took 0.3678ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.2361 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 53.2763ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\bigdata\Workspace\usecases\olympics\olympics, plugins: List(<none>))) took 63.059ms
[debug] [Loading] Done in C:\bigdata\Workspace\usecases\olympics\olympics, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 5611.5432ms
[debug]     Load.loadUnit: cleanEvalClasses took 35.8598ms
[debug]   Load.loadUnit(file:/C:/bigdata/Workspace/usecases/olympics/olympics/, ...) took 8290.7378ms
[debug] Load.apply: load took 8294.4845ms
[debug] Load.apply: resolveProjects took 0.6137ms
[debug] Load.apply: finalTransforms took 44.2547ms
[debug] Load.apply: config.delegates took 0.6208ms
[debug] Load.apply: Def.make(settings)... took 103.8008ms
[debug] Load.apply: structureIndex took 36.773ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to olympics (in build file:/C:/bigdata/Workspace/usecases/olympics/olympics/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52081 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52081, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to olympics (in build file:/C:/bigdata/Workspace/usecases/olympics/olympics/)
[debug] > Exec(idea-shell, None, None)
